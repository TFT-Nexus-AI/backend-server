package org.project.storage.db.core.user;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.project.storage.db.core.user.UserEntity;

import java.time.LocalDateTime;

import static org.assertj.core.api.Assertions.assertThat;


public class UserEntityTest {

    @Test
    @DisplayName("Domain User로부터 UserEntity를 생성할 수 있다")
    void createUserEntityFromDomainUser() {
        // given
        String puuid = "test-puuid-123";
        String gameName = "TestPlayer";
        String tagLine = "KR1";
        LocalDateTime createdAt = LocalDateTime.now();

        //when
        UserEntity userEntity = UserEntity.builder()
                .puuid(puuid)
                .gameName(gameName)
                .tagLine(tagLine)
                .createdAt(createdAt)
                .build();
        // then
        assertThat(userEntity.getPuuid()).isEqualTo(puuid);
        assertThat(userEntity.getGameName()).isEqualTo(gameName);
        assertThat(userEntity.getTagLine()).isEqualTo(tagLine);
        assertThat(userEntity.getCreatedAt()).isEqualTo(createdAt);

    }

    @Test
    @DisplayName("UserEntity의 ID는 자동 생성된다")
    void userEntityIdAutoGenerated() {
        // given
        UserEntity userEntity = UserEntity.builder()
                .puuid("test-puuid-123")
                .gameName("TestPlayer")
                .tagLine("KR1")
                .createdAt(LocalDateTime.now())
                .build();

        // when & then
        assertThat(userEntity.getId()).isNull(); // 저장 전에는 null
    }

    @Test
    @DisplayName("같은 puuid를 가진 UserEntity는 동등하다")
    void userEntitiesWithSamePuuidAreEqual() {
        // given
        LocalDateTime now = LocalDateTime.now();
        UserEntity userEntity1 = UserEntity.builder()
                .puuid("test-puuid-123")
                .gameName("TestPlayer1")
                .tagLine("KR1")
                .createdAt(now)
                .build();

        UserEntity userEntity2 = UserEntity.builder()
                .puuid("test-puuid-123")
                .gameName("TestPlayer2")
                .tagLine("KR2")
                .createdAt(now)
                .build();

        // when & then
        assertThat(userEntity1).isEqualTo(userEntity2);
        assertThat(userEntity1.hashCode()).isEqualTo(userEntity2.hashCode());
    }

}
