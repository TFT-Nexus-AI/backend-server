plugins {
    id 'java-library'
    id 'jacoco'
    id 'org.springframework.boot' apply(false)
    id 'io.spring.dependency-management'
    id 'io.spring.javaformat' apply(false)
    id 'org.asciidoctor.jvm.convert' apply(false)
}

apply from: 'lint.gradle'


allprojects {
    group = "${projectGroup}"
    version = "${applicationVersion}"
    sourceCompatibility = project.javaVersion

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.asciidoctor.jvm.convert'


    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.assertj:assertj-core:3.27.2'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }
    bootJar.enabled = false
    jar.enabled = true

    test {
        useJUnitPlatform {
            excludeTags('develop', 'restdocs')
        }
        jvmArgs "-Dorg.mockito.plugins.MockMaker=mock-maker-inline"
    }

    tasks.register('unitTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            excludeTags('develop', 'context', 'restdocs')
        }
        jvmArgs "-Dorg.mockito.plugins.MockMaker=mock-maker-inline"
    }

    tasks.register('contextTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            includeTags('context')

        }
        jvmArgs "-Dorg.mockito.plugins.MockMaker=mock-maker-inline"
    }

    tasks.register('restDocsTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            includeTags('restdocs')
        }
    }

    tasks.register('developTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            includeTags('develop')
        }
    }

    tasks.named('asciidoctor') {
        dependsOn restDocsTest
    }
}

